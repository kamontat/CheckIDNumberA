import com.android.ddmlib.DdmPreferences

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco-android'
apply plugin: 'com.google.gms.google-services'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def key_found = keystorePropertiesFile.exists()
def keystoreProperties = new Properties()
if (key_found) {
    // Initialize a new Properties() object called keystoreProperties.
    // Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    signingConfigs {
        release {
            if (key_found) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    compileSdkVersion project.ext.compileSDKVersion
    buildToolsVersion project.ext.buildTools
    defaultConfig {
        applicationId project.ext.appID
        testApplicationId project.ext.testAppID
        minSdkVersion project.ext.minSDKVersion
        targetSdkVersion project.ext.targetSDKVersion
        versionCode project.ext.appVersionCode
        versionName project.ext.appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        DdmPreferences.setTimeOut(60000)
        multiDexEnabled true
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (key_found)
                signingConfig signingConfigs.release
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def v = "_"

            // def id = variant.applicationId
            def appName = project.ext.appName

            // def versionName = variant.versionName
            def versionCode = variant.versionCode

            def buildName = variant.name == "debug" ? "-debug" : (variant.signingReady ? "-signed" : "");

            // def date = new Date().format('ddMMyyHHmmss')

            def fileName = appName + v + versionCode + buildName
            output.outputFile = output.outputFile = new File(output.outputFile.parent, fileName + ".apk")
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    lintOptions {
        abortOnError false
        // lintConfig file("./lint.xml")
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "2g"
        additionalParameters = ['--core-library']
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    productFlavors {
    }

    jacocoAndroidUnitTestReport {
        csv.enabled false
        html.enabled true
        xml.enabled true
    }
}

dependencies {
    // local library
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // android design
    
    compile 'com.android.support:appcompat-v7:25.4.0'
    compile 'com.android.support:design:25.4.0'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    // dialog
    compile 'com.afollestad.material-dialogs:core:0.9.4.4'
    compile 'com.afollestad.material-dialogs:commons:0.9.4.4'

    testCompile 'com.dicedmelon.gradle:jacoco-android:0.1.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.22'

    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-intents:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }
}
repositories {
    mavenCentral()
}
